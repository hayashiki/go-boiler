name: Build and Deploy to Cloud Run on Preview
on:
  push:
    branches:
      - main
  pull_request:
    types: [synchronize, opened, reopened, closed, labeled, unlabeled]
    branches:
      - main
env:
  GCP_PROJECT: ${{secrets.GCP_PROJECT}}
  GCP_PROJECT_NUM: ${{secrets.GCP_PROJECT_NUM}}
  SERVICE_NAME: preview-${{ github.event.number }}
  REGION: asia-northeast1
jobs:
  build_and_push_and_deploy:
    if: github.event_name == 'push' || github.event.action == 'labeled' || github.event.label.name == 'review' #  || github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize'
    needs: [lint, test]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.8.3
        with:
          create_credentials_file: true
          workload_identity_provider: projects/${{ env.GCP_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions
          service_account: github-actions@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com

      - id: gcloud
        name: Configure GCR Docker auth
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud --quiet auth configure-docker

      #        if: contains(github.ref, 'tags/v')
      - name: Build docker image
        run: |
          docker build -t ${{ env.SERVICE_NAME }} -f cmd/api/Dockerfile .
      - name: Tag docker image
        run: |
          docker tag ${{ env.SERVICE_NAME }} gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker tag ${{ env.SERVICE_NAME }} gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:latest
      - name: Push Docker Image to GCR
        run: |
          docker push gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:latest

      - name: Deploy
        run: |-
          gcloud run deploy ${{ env.SERVICE_NAME }} --image gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --project ${{ env.GCP_PROJECT }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --service-account run-invoker@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com \
            --allow-unauthenticated
          PREVIEW_URL=$(gcloud run services describe ${SERVICE_NAME} --region ${{ env.REGION }} --format 'value(status.url)')

      - name: Notify
        run: |
          PREVIEW_URL=$(gcloud run services describe ${SERVICE_NAME} --region ${{ env.REGION }} --format 'value(status.url)')
          curl -X POST \
            --url ${{ github.event.pull_request._links.statuses.href }} \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"state\": \"success\",
              \"target_url\": \"${PREVIEW_URL}\",
              \"description\": \"Deploy preview ready!\",
              \"context\": \"deploy/preview\"
            }"
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --config ./.golangci.yml
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: go test ./...

  cleanup-preview:
    name: Cleanup the Preview
    if: github.event.action == 'closed' || github.event.action == 'unlabeled' || github.event.label.name == 'review'
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.8.3
        with:
          create_credentials_file: true
          workload_identity_provider: projects/${{ env.GCP_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions
          service_account: github-actions@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com

      - id: gcloud
        name: Configure GCR Docker auth
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud --quiet auth configure-docker

      - name: Delete the Cloud Run Service
        run: gcloud --quiet run services delete ${SERVICE_NAME} --region ${{ env.REGION }}

      - name: Delete the Docker image in GCR
        run: gcloud container images delete gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}
