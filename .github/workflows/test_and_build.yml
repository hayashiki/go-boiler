name: test-and-build
on:
  push:
    branches:
      - main
      - infra
      - feature/*
  pull_request:
    branches:
      - main
      - infra
env:
  GCP_PROJECT: go-boiler-t1
  GCP_PROJECT_NUM: 573005387472
  DOCKER_REPO: hayashiki/go-boiler
  SERVICE_NAME: go-boiler-api
  REGION: asia-northeast1
  IMAGE_NAME: go-boiler-t1
  IMAGE_TAG: latest
jobs:
  docker_push:
    if: github.event_name == 'push'
    needs: [lint, test]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: 'write'

    steps:
      - uses: 'google-github-actions/setup-gcloud@v0'
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.3.1'
        with:
          create_credentials_file: true
          workload_identity_provider: 'projects/${{ env.GCP_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions'
          service_account: 'github-actions@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com'

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - id: 'gcloud'
        name: 'Authenticate and deploy'
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud --quiet auth configure-docker

      - name: Push Docker Image to Prod GCR
        #        if: contains(github.ref, 'tags/v')
        run: |
          docker build -t ${{ env.SERVICE_NAME }} -f cmd/api/Dockerfile .
          docker tag ${{ env.SERVICE_NAME }} gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ env.GCP_PROJECT }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --config ./.golangci.yml
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: go test ./...
